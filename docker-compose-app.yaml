version: "3.7"

services:
  application:
    container_name: enterprise-cleanarch
    image: enterprise-cleanarch:latest
    restart: always
    build: .
    environment:
      SQL_DATASOURCE: jdbc:sqlserver://sqlserver_db:1433;databaseName=master;queryTimeout=5
      SQL_USER: sa
      SQL_PASS: "!@12QWqw"
      MONGO_URI: mongodb://cleanarch_mongouser:cleanarch_mongopass@mongo_db:27017
      MONGO_DATABASE: customers
      REDIS_CACHE_ENABLED: "true"
      REDIS_HOST: redis_db
      REDIS_PORT: 6379
      REDIS_EXPIRETIME: 10
      REDIS_TIMEOUT: 1
      KAFKA_PRODUCER_SERVER: kafka_broker:9092
      KAFKA_PRODUCER_GROUPID: "group_id"
      KAFKA_CONSUMER_SERVER: kafka_broker:9092
      KAFKA_CONSUMER_GROUPID: "group_id"
      JAEGER_PROTOCOL: "http"
      JAEGER_HOST: ${DOCKER_GATEWAY_HOST:-host.docker.internal}:14250
      JWT_SECRET: "YWJyYWNhZGFicmFwZWRlY2FicmE"
      ENV: LOCAL_DOCKER_COMPOSE
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "5000:5000"
      - "9091:9091"
    networks:
      - "gpnet"
    depends_on:
      - "fluentd"
    logging:
      driver: "fluentd"
      options:
        #Use the proper version depending on your OS
        fluentd-address: host.docker.internal:24224
        #        fluentd-address: docker.for.mac.localhost:24224
#        fluentd-address: docker.for.win.localhost:24224
        tag: enterprise-cleanarch

  fluentd:
    container_name: fluentd
    image: fluentd-image:latest
    restart: on-failure
    build: ./fluentd
    volumes:
      - ./fluentd/conf:/fluentd/etc
    environment:
      - FLUENTD_CONF=fluent.conf
      - FLUENTD_OPT=-v
    depends_on:
      - "elasticsearch"
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      - "gpnet"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    container_name: elasticsearch
    restart: on-failure
    environment:
      - "discovery.type=single-node"
      - "bootstrap.memory_lock=true"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    expose:
      - "9200"
    ports:
      - "9200:9200"
    networks:
      - "gpnet"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.16.3
    restart: on-failure
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
      - "elasticsearch"
    ports:
      - "5601:5601"
    networks:
      - "gpnet"

  prometheus:
    image: bitnami/prometheus:2.32.1
    restart: on-failure
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - "gpnet"

  grafana:
    image: grafana/grafana:8.3.3
    restart: on-failure
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - "prometheus"
    networks:
      - "gpnet"

networks:
  gpnet:
    driver: bridge