plugins {
    id 'java'
    id 'jacoco'
}

version '1.0.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    testImplementation.extendsFrom compileOnly
}

dependencies {
    //Gson
    compileOnly group: 'com.google.code.gson', name: 'gson', version: '2.8.9'

    //Observabilidade
    compileOnly platform("io.opentelemetry:opentelemetry-bom:${openTelemetryVersion}")
    compileOnly platform("io.opentelemetry:opentelemetry-bom-alpha:${openTelemetryAlphaVersion}")
    compileOnly platform("io.grpc:grpc-bom:${grpcVersion}")

    testImplementation("org.mockito:mockito-junit-jupiter:${mockitoVersion}")
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.7.0"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    //Logging
    compileOnly "org.springframework.boot:spring-boot-starter-log4j2:${springBootVersion}"

    //Spring web
    compileOnly("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    //Spring security
    compileOnly("org.springframework.boot:spring-boot-starter-security:${springBootVersion}") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    //To verify jwt
    implementation 'io.jsonwebtoken:jjwt:0.7.0'

    //Observabilidade
    compileOnly("io.opentelemetry:opentelemetry-api:${openTelemetryVersion}")
    compileOnly("io.opentelemetry:opentelemetry-sdk:${openTelemetryVersion}")
    compileOnly("io.opentelemetry:opentelemetry-exporter-jaeger:${openTelemetryVersion}")
    compileOnly "io.opentelemetry:opentelemetry-semconv:${openTelemetryAlphaVersion}"
    compileOnly("io.grpc:grpc-protobuf")
    compileOnly("io.grpc:grpc-netty-shaded:${ioGrpcVersion}")
    compileOnly('io.micrometer:micrometer-registry-prometheus:1.8.1')

    //Redis
    compileOnly("org.springframework.data:spring-data-redis:${springDataVersion}")
    compileOnly 'io.lettuce:lettuce-core:6.1.6.RELEASE'

    //Kafka
    compileOnly "org.springframework.kafka:spring-kafka:${springKafkaVersion}"
    testImplementation "org.springframework.kafka:spring-kafka-test:${springKafkaVersion}"

    //resilience4j
    compileOnly "io.github.resilience4j:resilience4j-spring-boot2:${resilience4jVersion}"

    //Dependências do swagger
    compileOnly "io.springfox:springfox-swagger2:${springfoxVersion}"

    //Anotações noframework
    compileOnly group: 'javax.inject', name: 'javax.inject', version: '1'
}

configurations {
    testCompile.extendsFrom implementation, runtimeOnly, testImplementation
}

test {
    useJUnitPlatform()
}