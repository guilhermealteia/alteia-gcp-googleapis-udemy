#server.servlet.context-path=/api
server.port=5000

#JWT secret
jwt.validation.enabled=true
jwt.secret=${JWT_SECRET}

#gRPC
grpc.server.host=localhost
grpc.server.port=9091

#SQL Server Connection
spring.datasource.url=${SQL_DATASOURCE}
spring.datasource.username=${SQL_USER}
spring.datasource.password=${SQL_PASS}

#MongoDB Connection
spring.data.mongodb.uri=${MONGO_URI}
spring.data.mongodb.database=${MONGO_DATABASE}

#Redis Connection
redis.cache.enabled=${REDIS_CACHE_ENABLED}
spring.redis.host=${REDIS_HOST}
spring.redis.port=${REDIS_PORT}
spring.redis.expiretime=${REDIS_EXPIRETIME}
spring.redis.timeout=${REDIS_TIMEOUT}

#Logging configurations
org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

### Log Spring Cache output
logging.level.org.springframework.cache=ERROR

### Log Spring Web
logging.level.web=ERROR
logging.level.org.springframework.web=ERROR

## Producer properties
spring.kafka.producer.bootstrap-servers=${KAFKA_PRODUCER_SERVER}
spring.kafka.producer.group-id=${KAFKA_PRODUCER_GROUPID}

## Consumer properties
spring.kafka.consumer.bootstrap-servers=${KAFKA_CONSUMER_SERVER}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUPID}

# Common Kafka Properties
auto.create.topics.enable=true

# Observabilidade
## Jaeger
jaegerEndpoint=${JAEGER_PROTOCOL}://${JAEGER_HOST}
jaegerGrpcTimeout=30

## INFO ENDPOINT CONFIGURATION (YOU CAN ADD ANY PROPERTY AFTER info.app) ##
info.app.name=${spring.application.name}
info.app.environment=${ENV}
#info.app.version=@project.version@
#info.app.encoding=@project.build.sourceEncoding@
#info.app.java.version=@java.version@

#spring.jpa.database-platform=org.hibernate.dialect.SQLServer2012Dialect
#spring.jpa.hibernate.hbm2ddl.auto=update
#spring.jpa.hibernate.id.new_generator_mappings=false
#spring.main.allow-bean-definition-overriding=true