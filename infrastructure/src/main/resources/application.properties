server.servlet.context-path=/microservicechangeit

google.api.distance.url=https://maps.googleapis.com/maps/api/distancematrix/json
google.api.distance.key=AIzaSyDo7oiafnf9zCPJQ4XqvmOzkmo_ktDMlNc

spring.jpa.database-platform=org.hibernate.dialect.SQLServer2012Dialect
spring.jpa.hibernate.hbm2ddl.auto=update
spring.jpa.hibernate.id.new_generator_mappings=false
spring.main.allow-bean-definition-overriding=true

## Producer properties
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer

## Consumer properties
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Resilience4j
resilience4j.circuitbreaker.instances.backendA.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.backendA.slidingWindowSize=100
resilience4j.circuitbreaker.instances.backendB.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.backendB.slidingWindowSize=2
resilience4j.circuitbreaker.instances.backendB.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.backendB.slidingWindowType=TIME_BASED
resilience4j.circuitbreaker.instances.backendB.minimumNumberOfCalls=2
resilience4j.circuitbreaker.instances.backendB.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.backendB.failureRateThreshold=2
resilience4j.circuitbreaker.instances.backendB.eventConsumerBufferSize=2
resilience4j.circuitbreaker.instances.backendB.ignoreExceptions=br.com.alteia.microservicechangeit.common.exceptions.GenericException
#resilience4j.circuitbreaker.instances.backendB.recordFailurePredicate=io.github.robwin.exception.RecordFailurePredicate

resilience4j.retry.instances.backendA.maxAttempts=3
resilience4j.retry.instances.backendA.waitDuration=10s
resilience4j.retry.instances.backendA.enableExponentialBackoff=true
resilience4j.retry.instances.backendA.exponentialBackoffMultiplier=2
resilience4j.retry.instances.backendA.retryExceptions=org.springframework.web.client.HttpServerErrorException, java.io.IOException
resilience4j.retry.instances.backendA.ignoreExceptions=
resilience4j.retry.instances.backendB.maxAttempts=3
resilience4j.retry.instances.backendB.waitDuration=10s
resilience4j.retry.instances.backendB.retryExceptions=org.springframework.web.client.HttpServerErrorException, java.io.IOException
resilience4j.retry.instances.backendB.ignoreExceptions=

resilience4j.bulkhead.instances.backendA.maxConcurrentCalls=10
resilience4j.bulkhead.instances.backendB.maxWaitDuration=10ms
resilience4j.bulkhead.instances.backendB.maxConcurrentCalls=20

resilience4j.thread-pool-bulkhead.instances.backendC.maxThreadPoolSize=1
resilience4j.thread-pool-bulkhead.instances.backendC.coreThreadPoolSize=1
resilience4j.thread-pool-bulkhead.instances.backendC.queueCapacity=1

resilience4j.ratelimiter.instances.backendA.limitForPeriod=10
resilience4j.ratelimiter.instances.backendA.limitRefreshPeriod=1s
resilience4j.ratelimiter.instances.backendA.timeoutDuration=0
resilience4j.ratelimiter.instances.backendA.registerHealthIndicator=true
resilience4j.ratelimiter.instances.backendA.eventConsumerBufferSize=100
resilience4j.ratelimiter.instances.backendB.limitForPeriod=6
resilience4j.ratelimiter.instances.backendB.limitRefreshPeriod=500ms
resilience4j.ratelimiter.instances.backendB.timeoutDuration=3s

resilience4j.timelimiter.instances.backendA.timeoutDuration=2s
resilience4j.timelimiter.instances.backendA.cancelRunningFuture=true
resilience4j.timelimiter.instances.backendB.timeoutDuration=1s
resilience4j.timelimiter.instances.backendB.cancelRunningFuture=false

#Liquibase
spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml
spring.liquibase.enabled=true

#Spring management
management.endpoints.web.base-path=/
management.endpoints.web.exposure.include=*
management.endpoint.metrics.enabled=false

##Prometheus
management.metrics.export.prometheus.enabled=true
management.endpoint.prometheus.enabled=true

#Git Info
management.info.git.mode=full

spring.main.banner-mode=off