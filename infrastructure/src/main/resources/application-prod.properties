server.port=${APP_PORT}

#JWT secret
jwt.validation.enabled=true
jwt.secret=YWJyYWNhZGFicmFwZWRlY2FicmE

#SQL Server Connection
spring.datasource.url=jdbc:sqlserver://${SQLSERVER_DB_HOST}:${SQLSERVER_DB_PORT};databaseName=${SQLSERVER_DB_DATABASE};queryTimeout=${SQLSERVER_DB_QUERY_TIMEOUT}
spring.datasource.username=${SQLSERVER_DB_USER}
spring.datasource.password=${SQLSERVER_DB_PASSWORD}

#MongoDB Connection
spring.data.mongodb.uri=mongodb://${MONGODB_USER}:${MONGODB_PASS}@${MONGODB_HOST}:${MONGODB_PORT}
spring.data.mongodb.database=${MONGODB_DATABASE}

redis.cache.enabled=${CACHE_ENABLED}

spring.redis.host=${REDIS_HOST}
spring.redis.port=${REDIS_PORT}
spring.redis.expiretime=${REDIS_DEFAULT_EXPIRATION}
spring.redis.timeout=${REDIS_DEFAULT_TIMEOUT}

#Logging configurations
org.springframework.web.filter.CommonsRequestLoggingFilter=${SPRING_WEB_LOG_LEVEL}
logging.level.org.springframework.web=${SPRING_WEB_LOG_LEVEL}
logging.level.web=${APP_WEB_LOG_LEVEL}

### Log Spring Cache output
logging.level.org.springframework.cache=${APP_CACHE_LOG_LEVEL}

## Producer properties
spring.kafka.producer.bootstrap-servers=${KAFKA_PRODUCER_HOST_PORT}
spring.kafka.producer.group-id=${KAFKA_PRODUCER_GROUP_ID}

## Consumer properties
spring.kafka.consumer.bootstrap-servers=${KAFKA_CONSUMER_HOST_PORT}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID}

# Common Kafka Properties
auto.create.topics.enable=${KAFKA_AUTO_CREATE_TOPICS}

# Observabilidade
## Jaeger
jaegerEndpoint=${JAEGER_HOST_PORT}
jaegerGrpcTimeout=${JAEGER_GRPC_TIMEOUT}

##Prometheus
management.endpoints.web.base-path=${PROMETHEUS_BASE_PATH}
management.endpoints.web.exposure.include=${PROMETHEUS_WEB_EXPOSURE_INCLUDE}
management.metrics.export.prometheus.enabled=${PROMETHEUS_EXPORT_ENABLED}
management.endpoint.metrics.enabled=${PROMETHEUS_ENDPOINT_METRICS_ENABLED}
management.endpoint.prometheus.enabled=${PROMETHEUS_ENDPOINT_ENABLED}

#gRPC
grpc.server.host=${GRPC_HOST}
grpc.server.port=${GRPC_PORT}